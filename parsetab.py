
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '53EE9B96CEAE2468E033C48A1341AA19'
    
_lr_action_items = {'$end':([0,1,],[-1,0,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empty':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> empty","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','decafparser.py',12),
  ('start -> program','start',1,'p_start','decafparser.py',22),
  ('program -> class_decl_star','program',1,'p_program','decafparser.py',28),
  ('class_decl_star -> empty','class_decl_star',1,'p_class_decl_star','decafparser.py',38),
  ('class_decl_star -> class_decl class_decl_star','class_decl_star',2,'p_class_decl_star','decafparser.py',39),
  ('class_decl -> CLASS ID extends LEFT_BRACE class_body_decl_plus RIGHT_BRACE','class_decl',6,'p_class_decl','decafparser.py',45),
  ('extends_opt -> empty','extends_opt',1,'p_extends_opt','decafparser.py',51),
  ('extends_opt -> extends','extends_opt',1,'p_extends_opt','decafparser.py',52),
  ('extends -> EXTENDS ID','extends',2,'p_extends','decafparser.py',58),
  ('class_body_decl_plus -> class_body_decl class_body_decl_plus','class_body_decl_plus',2,'p_class_body_decl_plus','decafparser.py',63),
  ('class_body_decl_plus -> class_body_decl','class_body_decl_plus',1,'p_class_body_decl_plus','decafparser.py',64),
  ('class_body_decl -> field_decl','class_body_decl',1,'p_class_body_decl','decafparser.py',69),
  ('class_body_decl -> method_decl','class_body_decl',1,'p_class_body_decl','decafparser.py',70),
  ('class_body_decl -> constructor_decl','class_body_decl',1,'p_class_body_decl','decafparser.py',71),
  ('field_decl -> modifier var_decl','field_decl',2,'p_field_decl','decafparser.py',80),
  ('modifier -> empty','modifier',1,'p_modifier','decafparser.py',85),
  ('modifier -> PUBLIC','modifier',1,'p_modifier','decafparser.py',86),
  ('modifier -> PRIVATE','modifier',1,'p_modifier','decafparser.py',87),
  ('modifier -> PUBLIC STATIC','modifier',2,'p_modifier','decafparser.py',88),
  ('modifier -> PRIVATE STATIC','modifier',2,'p_modifier','decafparser.py',89),
  ('modifier -> STATIC','modifier',1,'p_modifier','decafparser.py',90),
  ('var_decl -> type variables SEMICOLON','var_decl',3,'p_var_decl','decafparser.py',95),
  ('type -> INT','type',1,'p_type','decafparser.py',100),
  ('type -> FLOAT','type',1,'p_type','decafparser.py',101),
  ('type -> BOOLEAN','type',1,'p_type','decafparser.py',102),
  ('type -> ID','type',1,'p_type','decafparser.py',103),
  ('variables -> variable more_variables','variables',2,'p_variables','decafparser.py',108),
  ('more_variables -> empty','more_variables',1,'p_more_variables','decafparser.py',113),
  ('more_variables -> COMMA variable more_variables','more_variables',3,'p_more_variables','decafparser.py',114),
  ('variable -> ID array_dim_star','variable',2,'p_variable','decafparser.py',119),
  ('array_dim_star -> empty','array_dim_star',1,'p_array_dim_star','decafparser.py',124),
  ('array_dim_star -> array_dim array_dim_star','array_dim_star',2,'p_array_dim_star','decafparser.py',125),
  ('array_dim -> LEFT_BRACKET RIGHT_BRACKET','array_dim',2,'p_array_dim','decafparser.py',130),
  ('method_decl -> modifier type_or_void ID LEFT_PAR formals_opt RIGHT_PAR block','method_decl',7,'p_method_decl','decafparser.py',139),
  ('type_or_void -> type','type_or_void',1,'p_type_or_void','decafparser.py',144),
  ('type_or_void -> VOID','type_or_void',1,'p_type_or_void','decafparser.py',145),
  ('constructor_decl -> modifier ID LEFT_PAR formals_opt RIGHT_PAR block','constructor_decl',6,'p_constructor_decl','decafparser.py',150),
  ('formals_opt -> empty','formals_opt',1,'p_formals_opt','decafparser.py',155),
  ('formals_opt -> formals','formals_opt',1,'p_formals_opt','decafparser.py',156),
  ('formals -> formal_param more_formals','formals',2,'p_formals','decafparser.py',161),
  ('more_formals -> empty','more_formals',1,'p_more_formals','decafparser.py',166),
  ('more_formals -> COMMA formal_param more_formals','more_formals',3,'p_more_formals','decafparser.py',167),
  ('formal_param -> type variable','formal_param',2,'p_formal_param','decafparser.py',172),
  ('block -> LEFT_BRACE stmt_star RIGHT_BRACE','block',3,'p_block','decafparser.py',181),
  ('stmt_star -> empty','stmt_star',1,'p_stmt_star','decafparser.py',186),
  ('stmt_star -> stmt stmt_star','stmt_star',2,'p_stmt_star','decafparser.py',187),
  ('stmt -> IF LEFT_PAR expr RIGHT_PAR stmt else_opt','stmt',6,'p_stmt','decafparser.py',192),
  ('stmt -> WHILE LEFT_PAR expr RIGHT_PAR stmt','stmt',5,'p_stmt','decafparser.py',193),
  ('stmt -> FOR LEFT_PAR stmt_expr_opt SEMICOLON expr_opt SEMICOLON stmt_expr_opt RIGHT_PAR stmt','stmt',9,'p_stmt','decafparser.py',194),
  ('stmt -> RETURN expr_opt SEMICOLON','stmt',3,'p_stmt','decafparser.py',195),
  ('stmt -> stmt_expr SEMICOLON','stmt',2,'p_stmt','decafparser.py',196),
  ('stmt -> BREAK SEMICOLON','stmt',2,'p_stmt','decafparser.py',197),
  ('stmt -> CONTINUE SEMICOLON','stmt',2,'p_stmt','decafparser.py',198),
  ('stmt -> block','stmt',1,'p_stmt','decafparser.py',199),
  ('stmt -> var_decl','stmt',1,'p_stmt','decafparser.py',200),
  ('stmt -> SEMICOLON','stmt',1,'p_stmt','decafparser.py',201),
  ('else_opt -> empty','else_opt',1,'p_else_opt','decafparser.py',206),
  ('else_opt -> ELSE stmt','else_opt',2,'p_else_opt','decafparser.py',207),
  ('literal -> INT_CONST','literal',1,'p_literal','decafparser.py',216),
  ('literal -> FLOAT_CONST','literal',1,'p_literal','decafparser.py',217),
  ('literal -> STRING_CONST','literal',1,'p_literal','decafparser.py',218),
  ('literal -> NULL','literal',1,'p_literal','decafparser.py',219),
  ('literal -> TRUE','literal',1,'p_literal','decafparser.py',220),
  ('literal -> FALSE','literal',1,'p_literal','decafparser.py',221),
  ('primary -> literal','primary',1,'p_primary','decafparser.py',226),
  ('primary -> THIS','primary',1,'p_primary','decafparser.py',227),
  ('primary -> SUPER','primary',1,'p_primary','decafparser.py',228),
  ('primary -> LEFT_PAR expr RIGHT_PAR','primary',3,'p_primary','decafparser.py',229),
  ('primary -> NEW ID LEFT_PAR arguments_opt RIGHT_PAR','primary',5,'p_primary','decafparser.py',230),
  ('primary -> lhs','primary',1,'p_primary','decafparser.py',231),
  ('primary -> method_invocation','primary',1,'p_primary','decafparser.py',232),
  ('arguments_opt -> empty','arguments_opt',1,'p_arguments_opt','decafparser.py',237),
  ('arguments_opt -> arguments','arguments_opt',1,'p_arguments_opt','decafparser.py',238),
  ('arguments -> expr more_expr','arguments',2,'p_arguments','decafparser.py',243),
  ('more_expr -> empty','more_expr',1,'p_more_expr','decafparser.py',248),
  ('more_expr -> COMMA expr more_expr','more_expr',3,'p_more_expr','decafparser.py',249),
  ('lhs -> field_access','lhs',1,'p_lhs','decafparser.py',254),
  ('lhs -> array_access','lhs',1,'p_lhs','decafparser.py',255),
  ('field_access -> primary DOT ID','field_access',3,'p_field_access','decafparser.py',260),
  ('field_access -> ID','field_access',1,'p_field_access','decafparser.py',261),
  ('array_access -> primary LEFT_BRACKET expr RIGHT_BRACKET','array_access',4,'p_array_access','decafparser.py',266),
  ('method_invocation -> field_access LEFT_PAR arguments_opt RIGHT_PAR','method_invocation',4,'p_method_invocation','decafparser.py',271),
  ('expr -> primary','expr',1,'p_expr','decafparser.py',276),
  ('expr -> assign','expr',1,'p_expr','decafparser.py',277),
  ('expr -> new_array','expr',1,'p_expr','decafparser.py',278),
  ('expr -> expr ARITH_OP expr','expr',3,'p_expr','decafparser.py',279),
  ('expr -> expr BOOL_OP expr','expr',3,'p_expr','decafparser.py',280),
  ('expr -> UNARY_OP expr','expr',2,'p_expr','decafparser.py',281),
  ('assign -> lhs EQUALS expr','assign',3,'p_assign','decafparser.py',286),
  ('assign -> lhs PLUS_PLUS','assign',2,'p_assign','decafparser.py',287),
  ('assign -> PLUS_PLUS lhs','assign',2,'p_assign','decafparser.py',288),
  ('assign -> lhs MINUS_MINUS','assign',2,'p_assign','decafparser.py',289),
  ('assign -> MINUS_MINUS lhs','assign',2,'p_assign','decafparser.py',290),
  ('new_array -> NEW type array_expr_plus','new_array',3,'p_new_array','decafparser.py',295),
  ('array_expr_plus -> array_expr array_expr_plus','array_expr_plus',2,'p_array_expr_plus','decafparser.py',300),
  ('array_expr_plus -> array_expr','array_expr_plus',1,'p_array_expr_plus','decafparser.py',301),
  ('array_expr -> LEFT_BRACKET expr RIGHT_BRACKET','array_expr',3,'p_array_expr','decafparser.py',306),
  ('array_empty_star -> empty','array_empty_star',1,'p_array_empty_star','decafparser.py',311),
  ('array_empty_star -> array_empty array_empty_star','array_empty_star',2,'p_array_empty_star','decafparser.py',312),
  ('array_empty -> LEFT_BRACKET RIGHT_BRACKET','array_empty',2,'p_array_empty','decafparser.py',317),
  ('stmt_expr -> assign','stmt_expr',1,'p_stmt_expr','decafparser.py',322),
  ('stmt_expr -> method_invocation','stmt_expr',1,'p_stmt_expr','decafparser.py',323),
  ('stmt_expr_opt -> empty','stmt_expr_opt',1,'p_stmt_expr_opt','decafparser.py',328),
  ('stmt_expr_opt -> stmt_expr','stmt_expr_opt',1,'p_stmt_expr_opt','decafparser.py',329),
  ('expr_opt -> empty','expr_opt',1,'p_expr_opt','decafparser.py',334),
  ('expr_opt -> expr','expr_opt',1,'p_expr_opt','decafparser.py',335),
]
