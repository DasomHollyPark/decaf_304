
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4ACC04FEE4901CB39F9553F0D43EC5FA'
    
_lr_action_items = {'ARITH_OP':([74,75,76,77,79,81,92,95,101,104,106,107,110,112,113,114,115,117,131,132,133,134,135,141,142,147,151,152,153,154,155,156,157,159,160,163,168,170,171,173,174,175,177,178,181,182,183,],[-61,-77,-60,-58,-62,-64,-63,-65,-66,-59,-84,-82,-70,-76,-79,139,-69,-83,-89,-91,-92,-90,139,139,139,139,139,-78,139,139,-67,-2,-95,139,139,-81,-80,-93,-2,-97,-94,139,-68,139,-98,-99,-96,]),'RETURN':([47,67,78,87,93,103,120,126,128,129,138,161,169,176,180,186,187,188,190,191,192,],[-21,71,-55,71,-54,-53,-50,-43,-51,-52,-49,71,71,-47,-2,71,-46,-56,-57,71,-48,]),'VOID':([13,14,15,16,17,18,19,20,21,23,25,26,30,47,66,105,126,],[-2,-2,-17,-16,-11,-13,-15,-20,-12,32,-19,-18,-14,-21,-36,-33,-43,]),'RIGHT_BRACE':([14,17,18,21,22,24,30,47,66,67,78,84,87,89,93,103,105,120,123,126,128,129,138,176,180,187,188,190,192,],[-10,-11,-13,-12,27,-9,-14,-21,-36,-2,-55,-44,-2,126,-54,-53,-33,-50,-45,-43,-51,-52,-49,-47,-2,-46,-56,-57,-48,]),'RIGHT_BRACKET':([53,74,75,76,77,79,81,92,95,101,104,106,107,110,112,113,115,117,131,132,133,134,141,151,152,154,155,156,157,159,160,163,168,170,171,172,173,174,175,177,181,182,183,],[63,-61,-77,-60,-58,-62,-64,-63,-65,-66,-59,-84,-82,-70,-76,-79,-69,-83,-89,-91,-92,-90,-87,168,-78,-88,-67,-2,-95,-85,-86,-81,-80,-93,-2,182,-97,-94,183,-68,-98,-99,-96,]),'WHILE':([47,67,78,87,93,103,120,126,128,129,138,161,169,176,180,186,187,188,190,191,192,],[-21,72,-55,72,-54,-53,-50,-43,-51,-52,-49,72,72,-47,-2,72,-46,-56,-57,72,-48,]),'STATIC':([13,14,15,16,17,18,21,30,47,66,105,126,],[20,20,25,26,-11,-13,-12,-14,-21,-36,-33,-43,]),'FLOAT_CONST':([47,67,71,78,87,93,98,99,100,103,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[-21,104,104,-55,104,-54,104,104,104,-53,104,104,-50,104,104,104,-43,104,-51,-52,104,-49,104,104,104,104,104,104,104,104,-47,-2,104,104,-46,-56,-57,104,-48,]),'NEW':([47,67,71,78,87,93,98,99,100,103,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[-21,73,108,-55,73,-54,73,73,108,-53,108,108,-50,108,73,108,-43,108,-51,-52,108,-49,108,108,108,108,73,108,108,73,-47,-2,73,73,-46,-56,-57,73,-48,]),'NULL':([47,67,71,78,87,93,98,99,100,103,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[-21,74,74,-55,74,-54,74,74,74,-53,74,74,-50,74,74,74,-43,74,-51,-52,74,-49,74,74,74,74,74,74,74,74,-47,-2,74,74,-46,-56,-57,74,-48,]),'TRUE':([47,67,71,78,87,93,98,99,100,103,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[-21,79,79,-55,79,-54,79,79,79,-53,79,79,-50,79,79,79,-43,79,-51,-52,79,-49,79,79,79,79,79,79,79,79,-47,-2,79,79,-46,-56,-57,79,-48,]),'DOT':([74,75,76,77,79,81,82,85,88,90,92,95,97,101,104,107,110,112,113,115,133,134,152,155,163,168,177,],[-61,-77,-60,-58,-62,-64,-70,-76,125,-79,-63,-65,-69,-66,-59,125,-70,-76,-79,-69,-69,-69,-78,-67,-81,-80,-68,]),'STRING_CONST':([47,67,71,78,87,93,98,99,100,103,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[-21,76,76,-55,76,-54,76,76,76,-53,76,76,-50,76,76,76,-43,76,-51,-52,76,-49,76,76,76,76,76,76,76,76,-47,-2,76,76,-46,-56,-57,76,-48,]),'INT_CONST':([47,67,71,78,87,93,98,99,100,103,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[-21,77,77,-55,77,-54,77,77,77,-53,77,77,-50,77,77,77,-43,77,-51,-52,77,-49,77,77,77,77,77,77,77,77,-47,-2,77,77,-46,-56,-57,77,-48,]),'SEMICOLON':([37,38,39,47,48,50,51,52,54,61,62,63,67,68,71,74,75,76,77,78,79,80,81,82,87,92,93,94,95,96,101,102,103,104,106,107,109,110,111,112,113,114,115,117,120,122,126,128,129,131,132,133,134,138,141,148,149,150,152,154,155,156,157,159,160,161,163,167,168,169,170,171,173,174,176,177,179,180,181,182,183,186,187,188,190,191,192,],[47,-2,-2,-21,-26,-27,-2,-29,-30,-2,-31,-32,78,-28,-2,-61,-77,-60,-58,-55,-62,120,-64,-101,78,-63,-54,128,-65,129,-66,-100,-53,-59,-84,-82,138,-70,-104,-76,-79,-105,-69,-83,-50,-2,-43,-51,-52,-89,-91,-92,-90,-49,-87,-103,167,-102,-78,-88,-67,-2,-95,-85,-86,78,-81,-2,-80,78,-93,-2,-97,-94,-47,-68,185,-2,-98,-99,-96,78,-46,-56,-57,78,-48,]),'PRIVATE':([13,14,17,18,21,30,47,66,105,126,],[15,15,-11,-13,-12,-14,-21,-36,-33,-43,]),'BOOL_OP':([74,75,76,77,79,81,92,95,101,104,106,107,110,112,113,114,115,117,131,132,133,134,135,141,142,147,151,152,153,154,155,156,157,159,160,163,168,170,171,173,174,175,177,178,181,182,183,],[-61,-77,-60,-58,-62,-64,-63,-65,-66,-59,-84,-82,-70,-76,-79,140,-69,-83,-89,-91,-92,-90,140,140,140,140,140,-78,140,140,-67,-2,-95,140,140,-81,-80,-93,-2,-97,-94,140,-68,140,-98,-99,-96,]),'CONTINUE':([47,67,78,87,93,103,120,126,128,129,138,161,169,176,180,186,187,188,190,191,192,],[-21,96,-55,96,-54,-53,-50,-43,-51,-52,-49,96,96,-47,-2,96,-46,-56,-57,96,-48,]),'COMMA':([38,39,41,51,52,54,60,61,62,63,65,74,75,76,77,79,81,92,95,101,104,106,107,110,112,113,115,117,131,132,133,134,141,147,152,154,155,156,157,159,160,163,168,170,171,173,174,177,178,181,182,183,],[49,-2,56,-2,-29,-30,-42,49,-31,-32,56,-61,-77,-60,-58,-62,-64,-63,-65,-66,-59,-84,-82,-70,-76,-79,-69,-83,-89,-91,-92,-90,-87,164,-78,-88,-67,-2,-95,-85,-86,-81,-80,-93,-2,-97,-94,-68,164,-98,-99,-96,]),'CLASS':([0,2,27,],[3,3,-5,]),'MINUS_MINUS':([47,67,71,75,78,85,87,90,93,97,100,103,112,113,115,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,152,158,161,164,167,168,169,176,180,185,186,187,188,190,191,192,],[-21,98,98,-77,-55,-76,98,-79,-54,132,98,-53,-76,-79,132,98,98,-50,98,98,98,-43,98,-51,-52,98,-49,98,98,98,-78,98,98,98,98,-80,98,-47,-2,98,98,-46,-56,-57,98,-48,]),'$end':([0,1,2,4,5,6,27,],[-2,0,-2,-3,-1,-4,-5,]),'FOR':([47,67,78,87,93,103,120,126,128,129,138,161,169,176,180,186,187,188,190,191,192,],[-21,86,-55,86,-54,-53,-50,-43,-51,-52,-49,86,86,-47,-2,86,-46,-56,-57,86,-48,]),'EQUALS':([75,85,90,97,112,113,115,152,168,],[-77,-76,-79,130,-76,-79,130,-78,-80,]),'ELSE':([47,78,93,103,120,126,128,129,138,176,180,187,188,190,192,],[-21,-55,-54,-53,-50,-43,-51,-52,-49,-47,186,-46,-56,-57,-48,]),'EXTENDS':([7,],[8,]),'RIGHT_PAR':([36,39,41,42,43,46,51,52,54,55,57,58,60,62,63,64,65,70,74,75,76,77,79,81,82,92,95,101,102,104,106,107,110,112,113,115,117,121,131,132,133,134,135,141,142,143,144,145,146,147,148,150,152,153,154,155,156,157,159,160,162,163,165,166,168,170,171,173,174,177,178,181,182,183,184,185,189,],[-2,-2,-2,-37,59,-38,-2,-29,-30,-2,-40,-39,-42,-31,-32,69,-2,-41,-61,-77,-60,-58,-62,-64,-101,-63,-65,-66,-100,-59,-84,-82,-70,-76,-79,-69,-83,-2,-89,-91,-92,-90,155,-87,161,-2,-72,-71,163,-2,-103,-102,-78,169,-88,-67,-2,-95,-85,-86,177,-81,-73,-74,-80,-93,-2,-97,-94,-68,-2,-98,-99,-96,-75,-2,191,]),'ID':([3,8,13,14,15,16,17,18,19,20,21,23,25,26,28,29,30,31,32,33,34,35,36,44,45,47,49,55,56,66,67,71,73,78,83,87,90,93,98,99,100,103,105,108,116,118,120,121,122,124,125,126,127,128,129,130,138,139,140,143,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[7,12,-2,-2,-17,-16,-11,-13,-15,-20,-12,31,-19,-18,-23,-22,-14,-25,-35,-24,39,40,45,39,-25,-21,39,45,45,-36,90,113,119,-55,39,90,-25,-54,113,113,113,-53,-33,137,113,113,-50,113,113,113,152,-43,113,-51,-52,113,-49,113,113,113,113,90,113,113,90,-47,-2,113,90,-46,-56,-57,90,-48,]),'IF':([47,67,78,87,93,103,120,126,128,129,138,161,169,176,180,186,187,188,190,191,192,],[-21,91,-55,91,-54,-53,-50,-43,-51,-52,-49,91,91,-47,-2,91,-46,-56,-57,91,-48,]),'FALSE':([47,67,71,78,87,93,98,99,100,103,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[-21,92,92,-55,92,-54,92,92,92,-53,92,92,-50,92,92,92,-43,92,-51,-52,92,-49,92,92,92,92,92,92,92,92,-47,-2,92,92,-46,-56,-57,92,-48,]),'INT':([13,14,15,16,17,18,19,20,21,23,25,26,30,36,47,55,56,66,67,78,87,93,103,105,108,120,126,128,129,138,161,169,176,180,186,187,188,190,191,192,],[-2,-2,-17,-16,-11,-13,-15,-20,-12,29,-19,-18,-14,29,-21,29,29,-36,29,-55,29,-54,-53,-33,29,-50,-43,-51,-52,-49,29,29,-47,-2,29,-46,-56,-57,29,-48,]),'FLOAT':([13,14,15,16,17,18,19,20,21,23,25,26,30,36,47,55,56,66,67,78,87,93,103,105,108,120,126,128,129,138,161,169,176,180,186,187,188,190,191,192,],[-2,-2,-17,-16,-11,-13,-15,-20,-12,28,-19,-18,-14,28,-21,28,28,-36,28,-55,28,-54,-53,-33,28,-50,-43,-51,-52,-49,28,28,-47,-2,28,-46,-56,-57,28,-48,]),'BREAK':([47,67,78,87,93,103,120,126,128,129,138,161,169,176,180,186,187,188,190,191,192,],[-21,94,-55,94,-54,-53,-50,-43,-51,-52,-49,94,94,-47,-2,94,-46,-56,-57,94,-48,]),'THIS':([47,67,71,78,87,93,98,99,100,103,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[-21,95,95,-55,95,-54,95,95,95,-53,95,95,-50,95,95,95,-43,95,-51,-52,95,-49,95,95,95,95,95,95,95,95,-47,-2,95,95,-46,-56,-57,95,-48,]),'BOOLEAN':([13,14,15,16,17,18,19,20,21,23,25,26,30,36,47,55,56,66,67,78,87,93,103,105,108,120,126,128,129,138,161,169,176,180,186,187,188,190,191,192,],[-2,-2,-17,-16,-11,-13,-15,-20,-12,33,-19,-18,-14,33,-21,33,33,-36,33,-55,33,-54,-53,-33,33,-50,-43,-51,-52,-49,33,33,-47,-2,33,-46,-56,-57,33,-48,]),'UNARY_OP':([71,100,116,118,121,124,127,130,139,140,143,158,164,167,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'PLUS_PLUS':([47,67,71,75,78,85,87,90,93,97,100,103,112,113,115,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,152,158,161,164,167,168,169,176,180,185,186,187,188,190,191,192,],[-21,99,99,-77,-55,-76,99,-79,-54,131,99,-53,-76,-79,131,99,99,-50,99,99,99,-43,99,-51,-52,99,-49,99,99,99,-78,99,99,99,99,-80,99,-47,-2,99,99,-46,-56,-57,99,-48,]),'LEFT_PAR':([31,40,47,67,71,72,78,85,86,87,90,91,93,98,99,100,103,112,113,116,118,119,120,121,122,124,126,127,128,129,130,137,138,139,140,143,152,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[36,55,-21,100,100,118,-55,121,122,100,-79,127,-54,100,100,100,-53,121,-79,100,100,143,-50,100,100,100,-43,100,-51,-52,100,143,-49,100,100,100,-78,100,100,100,100,100,-47,-2,100,100,-46,-56,-57,100,-48,]),'LEFT_BRACKET':([28,29,33,39,51,63,74,75,76,77,79,81,82,85,88,90,92,95,97,101,104,107,110,112,113,115,133,134,136,137,152,155,156,157,163,168,171,174,177,182,183,],[-23,-22,-24,53,53,-32,-61,-77,-60,-58,-62,-64,-70,-76,124,-79,-63,-65,-69,-66,-59,124,-70,-76,-79,-69,-69,-69,158,-25,-78,-67,172,158,-81,-80,172,-94,-68,-99,-96,]),'SUPER':([47,67,71,78,87,93,98,99,100,103,116,118,120,121,122,124,126,127,128,129,130,138,139,140,143,158,161,164,167,169,176,180,185,186,187,188,190,191,192,],[-21,101,101,-55,101,-54,101,101,101,-53,101,101,-50,101,101,101,-43,101,-51,-52,101,-49,101,101,101,101,101,101,101,101,-47,-2,101,101,-46,-56,-57,101,-48,]),'PUBLIC':([13,14,17,18,21,30,47,66,105,126,],[16,16,-11,-13,-12,-14,-21,-36,-33,-43,]),'LEFT_BRACE':([7,9,10,11,12,47,59,67,69,78,87,93,103,120,126,128,129,138,161,169,176,180,186,187,188,190,191,192,],[-2,13,-7,-6,-8,-21,67,67,67,-55,67,-54,-53,-50,-43,-51,-52,-49,67,67,-47,-2,67,-46,-56,-57,67,-48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'new_array':([71,100,116,118,121,124,127,130,139,140,143,158,164,167,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'array_empty_star':([156,171,],[170,181,]),'array_dim':([39,51,],[51,51,]),'variables':([34,83,],[37,37,]),'constructor_decl':([13,14,],[18,18,]),'primary':([67,71,87,98,99,100,116,118,121,122,124,127,130,139,140,143,158,161,164,167,169,185,186,191,],[88,107,88,88,88,107,107,107,107,88,107,107,107,107,107,107,107,88,107,107,88,88,88,88,]),'array_dim_star':([39,51,],[52,62,]),'else_opt':([180,],[187,]),'array_access':([67,71,87,98,99,100,116,118,121,122,124,127,130,139,140,143,158,161,164,167,169,185,186,191,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'type_or_void':([23,],[35,]),'formal_param':([36,55,56,],[41,41,65,]),'class_body_decl':([13,14,],[14,14,]),'arguments':([121,143,],[144,144,]),'array_empty':([156,171,],[171,171,]),'more_formals':([41,65,],[58,70,]),'stmt_expr':([67,87,122,161,169,185,186,191,],[80,80,148,80,80,148,80,80,]),'literal':([67,71,87,98,99,100,116,118,121,122,124,127,130,139,140,143,158,161,164,167,169,185,186,191,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'program':([0,],[1,]),'extends':([7,],[10,]),'class_decl':([0,2,],[2,2,]),'class_body_decl_plus':([13,14,],[22,24,]),'type':([23,36,55,56,67,87,108,161,169,186,191,],[34,44,44,44,83,83,136,83,83,83,83,]),'empty':([0,2,7,13,14,36,38,39,41,51,55,61,65,67,71,87,121,122,143,147,156,167,171,178,180,185,],[4,4,11,19,19,42,50,54,57,54,42,50,57,84,111,84,145,150,145,166,173,111,173,166,188,150,]),'formals':([36,55,],[46,46,]),'field_access':([67,71,87,98,99,100,116,118,121,122,124,127,130,139,140,143,158,161,164,167,169,185,186,191,],[85,112,85,112,112,112,112,112,112,85,112,112,112,112,112,112,112,85,112,112,85,85,85,85,]),'stmt':([67,87,161,169,186,191,],[87,87,176,180,190,192,]),'arguments_opt':([121,143,],[146,162,]),'method_invocation':([67,71,87,98,99,100,116,118,121,122,124,127,130,139,140,143,158,161,164,167,169,185,186,191,],[82,110,82,110,110,110,110,110,110,82,110,110,110,110,110,110,110,82,110,110,82,82,82,82,]),'variable':([34,44,49,83,],[38,60,61,38,]),'stmt_star':([67,87,],[89,123,]),'array_expr_plus':([136,157,],[156,174,]),'more_variables':([38,61,],[48,68,]),'expr_opt':([71,167,],[109,179,]),'field_decl':([13,14,],[17,17,]),'extends_opt':([7,],[9,]),'method_decl':([13,14,],[21,21,]),'var_decl':([23,67,87,161,169,186,191,],[30,93,93,93,93,93,93,]),'assign':([67,71,87,100,116,118,121,122,124,127,130,139,140,143,158,161,164,167,169,185,186,191,],[102,117,102,117,117,117,117,102,117,117,117,117,117,117,117,102,117,117,102,102,102,102,]),'array_expr':([136,157,],[157,157,]),'stmt_expr_opt':([122,185,],[149,189,]),'lhs':([67,71,87,98,99,100,116,118,121,122,124,127,130,139,140,143,158,161,164,167,169,185,186,191,],[97,115,97,133,134,115,115,115,115,97,115,115,115,115,115,115,115,97,115,115,97,97,97,97,]),'formals_opt':([36,55,],[43,64,]),'more_expr':([147,178,],[165,184,]),'expr':([71,100,116,118,121,124,127,130,139,140,143,158,164,167,],[114,135,141,142,147,151,153,154,159,160,147,175,178,114,]),'modifier':([13,14,],[23,23,]),'class_decl_star':([0,2,],[5,6,]),'block':([59,67,69,87,161,169,186,191,],[66,103,105,103,103,103,103,103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class_decl_star','program',1,'p_program','decafparser.py',13),
  ('empty -> <empty>','empty',0,'p_empty','decafparser.py',19),
  ('class_decl_star -> empty','class_decl_star',1,'p_class_decl_star','decafparser.py',25),
  ('class_decl_star -> class_decl class_decl_star','class_decl_star',2,'p_class_decl_star','decafparser.py',26),
  ('class_decl -> CLASS ID extends_opt LEFT_BRACE class_body_decl_plus RIGHT_BRACE','class_decl',6,'p_class_decl','decafparser.py',32),
  ('extends_opt -> empty','extends_opt',1,'p_extends_opt','decafparser.py',38),
  ('extends_opt -> extends','extends_opt',1,'p_extends_opt','decafparser.py',39),
  ('extends -> EXTENDS ID','extends',2,'p_extends','decafparser.py',45),
  ('class_body_decl_plus -> class_body_decl class_body_decl_plus','class_body_decl_plus',2,'p_class_body_decl_plus','decafparser.py',51),
  ('class_body_decl_plus -> class_body_decl','class_body_decl_plus',1,'p_class_body_decl_plus','decafparser.py',52),
  ('class_body_decl -> field_decl','class_body_decl',1,'p_class_body_decl','decafparser.py',58),
  ('class_body_decl -> method_decl','class_body_decl',1,'p_class_body_decl','decafparser.py',59),
  ('class_body_decl -> constructor_decl','class_body_decl',1,'p_class_body_decl','decafparser.py',60),
  ('field_decl -> modifier var_decl','field_decl',2,'p_field_decl','decafparser.py',70),
  ('modifier -> empty','modifier',1,'p_modifier','decafparser.py',75),
  ('modifier -> PUBLIC','modifier',1,'p_modifier','decafparser.py',76),
  ('modifier -> PRIVATE','modifier',1,'p_modifier','decafparser.py',77),
  ('modifier -> PUBLIC STATIC','modifier',2,'p_modifier','decafparser.py',78),
  ('modifier -> PRIVATE STATIC','modifier',2,'p_modifier','decafparser.py',79),
  ('modifier -> STATIC','modifier',1,'p_modifier','decafparser.py',80),
  ('var_decl -> type variables SEMICOLON','var_decl',3,'p_var_decl','decafparser.py',86),
  ('type -> INT','type',1,'p_type','decafparser.py',91),
  ('type -> FLOAT','type',1,'p_type','decafparser.py',92),
  ('type -> BOOLEAN','type',1,'p_type','decafparser.py',93),
  ('type -> ID','type',1,'p_type','decafparser.py',94),
  ('variables -> variable more_variables','variables',2,'p_variables','decafparser.py',100),
  ('more_variables -> empty','more_variables',1,'p_more_variables','decafparser.py',106),
  ('more_variables -> COMMA variable more_variables','more_variables',3,'p_more_variables','decafparser.py',107),
  ('variable -> ID array_dim_star','variable',2,'p_variable','decafparser.py',113),
  ('array_dim_star -> empty','array_dim_star',1,'p_array_dim_star','decafparser.py',118),
  ('array_dim_star -> array_dim array_dim_star','array_dim_star',2,'p_array_dim_star','decafparser.py',119),
  ('array_dim -> LEFT_BRACKET RIGHT_BRACKET','array_dim',2,'p_array_dim','decafparser.py',124),
  ('method_decl -> modifier type_or_void ID LEFT_PAR formals_opt RIGHT_PAR block','method_decl',7,'p_method_decl','decafparser.py',133),
  ('type_or_void -> type','type_or_void',1,'p_type_or_void','decafparser.py',138),
  ('type_or_void -> VOID','type_or_void',1,'p_type_or_void','decafparser.py',139),
  ('constructor_decl -> modifier ID LEFT_PAR formals_opt RIGHT_PAR block','constructor_decl',6,'p_constructor_decl','decafparser.py',144),
  ('formals_opt -> empty','formals_opt',1,'p_formals_opt','decafparser.py',149),
  ('formals_opt -> formals','formals_opt',1,'p_formals_opt','decafparser.py',150),
  ('formals -> formal_param more_formals','formals',2,'p_formals','decafparser.py',155),
  ('more_formals -> empty','more_formals',1,'p_more_formals','decafparser.py',160),
  ('more_formals -> COMMA formal_param more_formals','more_formals',3,'p_more_formals','decafparser.py',161),
  ('formal_param -> type variable','formal_param',2,'p_formal_param','decafparser.py',166),
  ('block -> LEFT_BRACE stmt_star RIGHT_BRACE','block',3,'p_block','decafparser.py',175),
  ('stmt_star -> empty','stmt_star',1,'p_stmt_star','decafparser.py',180),
  ('stmt_star -> stmt stmt_star','stmt_star',2,'p_stmt_star','decafparser.py',181),
  ('stmt -> IF LEFT_PAR expr RIGHT_PAR stmt else_opt','stmt',6,'p_stmt','decafparser.py',186),
  ('stmt -> WHILE LEFT_PAR expr RIGHT_PAR stmt','stmt',5,'p_stmt','decafparser.py',187),
  ('stmt -> FOR LEFT_PAR stmt_expr_opt SEMICOLON expr_opt SEMICOLON stmt_expr_opt RIGHT_PAR stmt','stmt',9,'p_stmt','decafparser.py',188),
  ('stmt -> RETURN expr_opt SEMICOLON','stmt',3,'p_stmt','decafparser.py',189),
  ('stmt -> stmt_expr SEMICOLON','stmt',2,'p_stmt','decafparser.py',190),
  ('stmt -> BREAK SEMICOLON','stmt',2,'p_stmt','decafparser.py',191),
  ('stmt -> CONTINUE SEMICOLON','stmt',2,'p_stmt','decafparser.py',192),
  ('stmt -> block','stmt',1,'p_stmt','decafparser.py',193),
  ('stmt -> var_decl','stmt',1,'p_stmt','decafparser.py',194),
  ('stmt -> SEMICOLON','stmt',1,'p_stmt','decafparser.py',195),
  ('else_opt -> empty','else_opt',1,'p_else_opt','decafparser.py',200),
  ('else_opt -> ELSE stmt','else_opt',2,'p_else_opt','decafparser.py',201),
  ('literal -> INT_CONST','literal',1,'p_literal','decafparser.py',210),
  ('literal -> FLOAT_CONST','literal',1,'p_literal','decafparser.py',211),
  ('literal -> STRING_CONST','literal',1,'p_literal','decafparser.py',212),
  ('literal -> NULL','literal',1,'p_literal','decafparser.py',213),
  ('literal -> TRUE','literal',1,'p_literal','decafparser.py',214),
  ('literal -> FALSE','literal',1,'p_literal','decafparser.py',215),
  ('primary -> literal','primary',1,'p_primary','decafparser.py',220),
  ('primary -> THIS','primary',1,'p_primary','decafparser.py',221),
  ('primary -> SUPER','primary',1,'p_primary','decafparser.py',222),
  ('primary -> LEFT_PAR expr RIGHT_PAR','primary',3,'p_primary','decafparser.py',223),
  ('primary -> NEW ID LEFT_PAR arguments_opt RIGHT_PAR','primary',5,'p_primary','decafparser.py',224),
  ('primary -> lhs','primary',1,'p_primary','decafparser.py',225),
  ('primary -> method_invocation','primary',1,'p_primary','decafparser.py',226),
  ('arguments_opt -> empty','arguments_opt',1,'p_arguments_opt','decafparser.py',231),
  ('arguments_opt -> arguments','arguments_opt',1,'p_arguments_opt','decafparser.py',232),
  ('arguments -> expr more_expr','arguments',2,'p_arguments','decafparser.py',237),
  ('more_expr -> empty','more_expr',1,'p_more_expr','decafparser.py',242),
  ('more_expr -> COMMA expr more_expr','more_expr',3,'p_more_expr','decafparser.py',243),
  ('lhs -> field_access','lhs',1,'p_lhs','decafparser.py',248),
  ('lhs -> array_access','lhs',1,'p_lhs','decafparser.py',249),
  ('field_access -> primary DOT ID','field_access',3,'p_field_access','decafparser.py',254),
  ('field_access -> ID','field_access',1,'p_field_access','decafparser.py',255),
  ('array_access -> primary LEFT_BRACKET expr RIGHT_BRACKET','array_access',4,'p_array_access','decafparser.py',260),
  ('method_invocation -> field_access LEFT_PAR arguments_opt RIGHT_PAR','method_invocation',4,'p_method_invocation','decafparser.py',265),
  ('expr -> primary','expr',1,'p_expr','decafparser.py',270),
  ('expr -> assign','expr',1,'p_expr','decafparser.py',271),
  ('expr -> new_array','expr',1,'p_expr','decafparser.py',272),
  ('expr -> expr ARITH_OP expr','expr',3,'p_expr','decafparser.py',273),
  ('expr -> expr BOOL_OP expr','expr',3,'p_expr','decafparser.py',274),
  ('expr -> UNARY_OP expr','expr',2,'p_expr','decafparser.py',275),
  ('assign -> lhs EQUALS expr','assign',3,'p_assign','decafparser.py',280),
  ('assign -> lhs PLUS_PLUS','assign',2,'p_assign','decafparser.py',281),
  ('assign -> PLUS_PLUS lhs','assign',2,'p_assign','decafparser.py',282),
  ('assign -> lhs MINUS_MINUS','assign',2,'p_assign','decafparser.py',283),
  ('assign -> MINUS_MINUS lhs','assign',2,'p_assign','decafparser.py',284),
  ('new_array -> NEW type array_expr_plus array_empty_star','new_array',4,'p_new_array','decafparser.py',289),
  ('array_expr_plus -> array_expr array_expr_plus','array_expr_plus',2,'p_array_expr_plus','decafparser.py',294),
  ('array_expr_plus -> array_expr','array_expr_plus',1,'p_array_expr_plus','decafparser.py',295),
  ('array_expr -> LEFT_BRACKET expr RIGHT_BRACKET','array_expr',3,'p_array_expr','decafparser.py',300),
  ('array_empty_star -> empty','array_empty_star',1,'p_array_empty_star','decafparser.py',305),
  ('array_empty_star -> array_empty array_empty_star','array_empty_star',2,'p_array_empty_star','decafparser.py',306),
  ('array_empty -> LEFT_BRACKET RIGHT_BRACKET','array_empty',2,'p_array_empty','decafparser.py',311),
  ('stmt_expr -> assign','stmt_expr',1,'p_stmt_expr','decafparser.py',316),
  ('stmt_expr -> method_invocation','stmt_expr',1,'p_stmt_expr','decafparser.py',317),
  ('stmt_expr_opt -> empty','stmt_expr_opt',1,'p_stmt_expr_opt','decafparser.py',322),
  ('stmt_expr_opt -> stmt_expr','stmt_expr_opt',1,'p_stmt_expr_opt','decafparser.py',323),
  ('expr_opt -> empty','expr_opt',1,'p_expr_opt','decafparser.py',328),
  ('expr_opt -> expr','expr_opt',1,'p_expr_opt','decafparser.py',329),
]
