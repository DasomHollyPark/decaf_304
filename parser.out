Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    MINUS
    DIVIDED_BY
    PLUS
    TIMES

Grammar

Rule 0     S' -> empty
Rule 1     empty -> <empty>
Rule 2     start -> class_decl_star
Rule 3     class_decl_star -> empty
Rule 4     class_decl_star -> class_decl class_decl_star
Rule 5     class_decl -> CLASS ID extends LEFT_BRACE class_body_decl_plus RIGHT_BRACE
Rule 6     extends_opt -> empty
Rule 7     extends_opt -> extends
Rule 8     extends -> EXTENDS ID
Rule 9     class_body_decl_plus -> class_body_decl class_body_decl_plus
Rule 10    class_body_decl_plus -> class_body_decl
Rule 11    class_body_decl -> field_decl
Rule 12    class_body_decl -> method_decl
Rule 13    class_body_decl -> constructor_decl
Rule 14    field_decl -> modifier var_decl
Rule 15    modifier -> empty
Rule 16    modifier -> PUBLIC
Rule 17    modifier -> PRIVATE
Rule 18    modifier -> PUBLIC STATIC
Rule 19    modifier -> PRIVATE STATIC
Rule 20    modifier -> STATIC
Rule 21    var_decl -> type variables SEMICOLON
Rule 22    type -> INT
Rule 23    type -> FLOAT
Rule 24    type -> BOOLEAN
Rule 25    type -> ID
Rule 26    variables -> variable more_variables
Rule 27    more_variables -> empty
Rule 28    more_variables -> COMMA variable more_variables
Rule 29    variable -> ID array_dim_star
Rule 30    array_dim_star -> empty
Rule 31    array_dim_star -> array_dim array_dim_star
Rule 32    array_dim -> LEFT_BRACKET RIGHT_BRACKET
Rule 33    method_decl -> modifier type_or_void ID LEFT_PAR formals_opt RIGHT_PAR block
Rule 34    type_or_void -> type
Rule 35    type_or_void -> VOID
Rule 36    constructor_decl -> modifier ID LEFT_PAR formals_opt RIGHT_PAR block
Rule 37    formals_opt -> empty
Rule 38    formals_opt -> formals
Rule 39    formals -> formal_param more_formals
Rule 40    more_formals -> empty
Rule 41    more_formals -> COMMA formal_param more_formals
Rule 42    formal_param -> type variable
Rule 43    block -> LEFT_BRACE stmt_star RIGHT_BRACE
Rule 44    stmt_star -> empty
Rule 45    stmt_star -> stmt stmt_star
Rule 46    stmt -> IF LEFT_PAR expr RIGHT_PAR stmt else_opt
Rule 47    stmt -> WHILE LEFT_PAR expr RIGHT_PAR stmt
Rule 48    stmt -> FOR LEFT_PAR stmt_expr_opt SEMICOLON expr_opt SEMICOLON stmt_expr_opt RIGHT_PAR stmt
Rule 49    stmt -> RETURN expr_opt SEMICOLON
Rule 50    stmt -> stmt_expr SEMICOLON
Rule 51    stmt -> BREAK SEMICOLON
Rule 52    stmt -> CONTINUE SEMICOLON
Rule 53    stmt -> block
Rule 54    stmt -> var_decl
Rule 55    stmt -> SEMICOLON
Rule 56    else_opt -> empty
Rule 57    else_opt -> ELSE stmt
Rule 58    literal -> INT_CONST
Rule 59    literal -> FLOAT_CONST
Rule 60    literal -> STRING_CONST
Rule 61    literal -> NULL
Rule 62    literal -> TRUE
Rule 63    literal -> FALSE
Rule 64    primary -> literal
Rule 65    primary -> THIS
Rule 66    primary -> SUPER
Rule 67    primary -> LEFT_PAR expr RIGHT_PAR
Rule 68    primary -> NEW ID LEFT_PAR arguments_opt RIGHT_PAR
Rule 69    primary -> lhs
Rule 70    primary -> method_invocation
Rule 71    arguments_opt -> empty
Rule 72    arguments_opt -> arguments
Rule 73    arguments -> expr more_expr
Rule 74    more_expr -> empty
Rule 75    more_expr -> COMMA expr more_expr
Rule 76    lhs -> field_access
Rule 77    lhs -> array_access
Rule 78    field_access -> primary DOT ID
Rule 79    field_access -> ID
Rule 80    array_access -> primary LEFT_BRACKET expr RIGHT_BRACKET
Rule 81    method_invocation -> field_access LEFT_PAR arguments_opt RIGHT_PAR
Rule 82    expr -> primary
Rule 83    expr -> assign
Rule 84    expr -> new_array
Rule 85    expr -> expr ARITH_OP expr
Rule 86    expr -> expr BOOL_OP expr
Rule 87    expr -> UNARY_OP expr
Rule 88    assign -> lhs EQUALS expr
Rule 89    assign -> lhs PLUS_PLUS
Rule 90    assign -> PLUS_PLUS lhs
Rule 91    assign -> lhs MINUS_MINUS
Rule 92    assign -> MINUS_MINUS lhs
Rule 93    new_array -> NEW type array_expr_plus
Rule 94    array_expr_plus -> array_expr array_expr_plus
Rule 95    array_expr_plus -> array_expr
Rule 96    array_expr -> LEFT_BRACKET expr RIGHT_BRACKET
Rule 97    array_empty_star -> empty
Rule 98    array_empty_star -> array_empty array_empty_star
Rule 99    array_empty -> LEFT_BRACKET RIGHT_BRACKET
Rule 100   stmt_expr -> assign
Rule 101   stmt_expr -> method_invocation

Terminals, with rules where they appear

ARITH_OP             : 85
BOOLEAN              : 24
BOOL_OP              : 86
BREAK                : 51
CLASS                : 5
COMMA                : 28 41 75
CONTINUE             : 52
DIVIDED_BY           : 
DO                   : 
DOT                  : 78
ELSE                 : 57
EQUALS               : 88
EXTENDS              : 8
FALSE                : 63
FLOAT                : 23
FLOAT_CONST          : 59
FOR                  : 48
ID                   : 5 8 25 29 33 36 68 78 79
IF                   : 46
INT                  : 22
INT_CONST            : 58
LEFT_BRACE           : 5 43
LEFT_BRACKET         : 32 80 96 99
LEFT_PAR             : 33 36 46 47 48 67 68 81
MINUS                : 
MINUS_MINUS          : 91 92
NEW                  : 68 93
NULL                 : 61
PLUS                 : 
PLUS_PLUS            : 89 90
PRIVATE              : 17 19
PUBLIC               : 16 18
RETURN               : 49
RIGHT_BRACE          : 5 43
RIGHT_BRACKET        : 32 80 96 99
RIGHT_PAR            : 33 36 46 47 48 67 68 81
SEMICOLON            : 21 48 48 49 50 51 52 55
STATIC               : 18 19 20
STRING_CONST         : 60
SUPER                : 66
THIS                 : 65
TIMES                : 
TRUE                 : 62
UNARY_OP             : 87
VOID                 : 35
WHILE                : 47
error                : 

Nonterminals, with rules where they appear

arguments            : 72
arguments_opt        : 68 81
array_access         : 77
array_dim            : 31
array_dim_star       : 29 31
array_empty          : 98
array_empty_star     : 98
array_expr           : 94 95
array_expr_plus      : 93 94
assign               : 83 100
block                : 33 36 53
class_body_decl      : 9 10
class_body_decl_plus : 5 9
class_decl           : 4
class_decl_star      : 2 4
constructor_decl     : 13
else_opt             : 46
empty                : 3 6 15 27 30 37 40 44 56 71 74 97 0
expr                 : 46 47 67 73 75 80 85 85 86 86 87 88 96
expr_opt             : 48 49
extends              : 5 7
extends_opt          : 
field_access         : 76 81
field_decl           : 11
formal_param         : 39 41
formals              : 38
formals_opt          : 33 36
lhs                  : 69 88 89 90 91 92
literal              : 64
method_decl          : 12
method_invocation    : 70 101
modifier             : 14 33 36
more_expr            : 73 75
more_formals         : 39 41
more_variables       : 26 28
new_array            : 84
primary              : 78 80 82
start                : 
stmt                 : 45 46 47 48 57
stmt_expr            : 50
stmt_expr_opt        : 48 48
stmt_star            : 43 45
type                 : 21 34 42 93
type_or_void         : 33
var_decl             : 14 54
variable             : 26 28 42
variables            : 21

