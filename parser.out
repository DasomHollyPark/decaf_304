Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    NUMBER
    CLASS
    EXTENDS

Grammar

Rule 0     S' -> start
Rule 1     start -> field_decl
Rule 2     start -> constructor_decl
Rule 3     start -> method_decl
Rule 4     start -> literal
Rule 5     start -> field_access
Rule 6     field_decl -> modifier var_decl
Rule 7     modifier -> <empty>
Rule 8     modifier -> PUBLIC
Rule 9     modifier -> PUBLIC STATIC
Rule 10    modifier -> PRIVATE
Rule 11    modifier -> PRIVATE STATIC
Rule 12    modifier -> STATIC
Rule 13    var_decl -> type variables SEMICOLON
Rule 14    type -> INT
Rule 15    type -> FLOAT
Rule 16    type -> BOOLEAN
Rule 17    type -> ID
Rule 18    variables -> variable variable2
Rule 19    variable2 -> <empty>
Rule 20    variable2 -> COMMA variable variable2
Rule 21    variable -> ID
Rule 22    method_decl -> modifier type ID LEFT_PAR RIGHT_PAR block
Rule 23    method_decl -> modifier type ID LEFT_PAR formals RIGHT_PAR block
Rule 24    method_decl -> modifier VOID ID LEFT_PAR RIGHT_PAR block
Rule 25    method_decl -> modifier VOID ID LEFT_PAR formals RIGHT_PAR block
Rule 26    block -> LEFT_BRACE stmts RIGHT_BRACE
Rule 27    stmts -> stmt stmt2
Rule 28    stmt -> IF LEFT_PAR expr RIGHT_PAR stmt else_stmt
Rule 29    stmt -> WHILE LEFT_PAR expr RIGHT_PAR stmt
Rule 30    stmt -> FOR LEFT_PAR stmt_expr SEMICOLON expr SEMICOLON stmt_expr RIGHT_PAR stmt
Rule 31    stmt -> RETURN expr SEMICOLON
Rule 32    stmt -> stmt_expr SEMICOLON
Rule 33    stmt -> BREAK SEMICOLON
Rule 34    stmt -> CONTINUE SEMICOLON
Rule 35    stmt -> block
Rule 36    stmt -> var_decl
Rule 37    stmt -> SEMICOLON
Rule 38    stmt_expr -> assign
Rule 39    stmt_expr -> method_invocation
Rule 40    assign -> lhs EQUALS expr
Rule 41    assign -> lhs PLUS_PLUS
Rule 42    assign -> PLUS_PLUS lhs
Rule 43    assign -> lhs MINUS_MINUS
Rule 44    assign -> MINUS_MINUS lhs
Rule 45    else_stmt -> <empty>
Rule 46    else_stmt -> ELSE stmt
Rule 47    stmt2 -> stmts
Rule 48    stmt2 -> <empty>
Rule 49    expr -> primary
Rule 50    expr -> assign
Rule 51    expr -> new_array
Rule 52    expr -> expr ARITH_OP expr
Rule 53    expr -> expr BOOL_OP expr
Rule 54    expr -> UNARY_OP expr
Rule 55    new_array -> NEW type array_d array_e
Rule 56    array_d -> LEFT_BRACKET expr RIGHT_BRACKET array_d2 array_e
Rule 57    array_d2 -> LEFT_BRACKET expr RIGHT_BRACKET array_d2
Rule 58    array_d2 -> <empty>
Rule 59    array_e -> LEFT_BRACKET RIGHT_BRACKET array_e
Rule 60    array_e -> <empty>
Rule 61    constructor_decl -> modifier ID LEFT_PAR RIGHT_PAR
Rule 62    constructor_decl -> modifier ID LEFT_PAR formals RIGHT_PAR
Rule 63    formals -> formal_param formal_param2
Rule 64    formal_param2 -> <empty>
Rule 65    formal_param2 -> COMMA formal_param formal_param2
Rule 66    formal_param -> type variable
Rule 67    literal -> STRING_CONST
Rule 68    literal -> NULL
Rule 69    literal -> TRUE
Rule 70    literal -> FALSE
Rule 71    primary -> literal
Rule 72    primary -> THIS
Rule 73    primary -> SUPER
Rule 74    lhs -> field_access
Rule 75    field_access -> primary DOT ID
Rule 76    field_access -> ID

Terminals, with rules where they appear

ARITH_OP             : 52
BOOLEAN              : 16
BOOL_OP              : 53
BREAK                : 33
CLASS                : 
COMMA                : 20 65
CONTINUE             : 34
DO                   : 
DOT                  : 75
ELSE                 : 46
EQUALS               : 40
EXTENDS              : 
FALSE                : 70
FLOAT                : 15
FOR                  : 30
ID                   : 17 21 22 23 24 25 61 62 75 76
IF                   : 28
INT                  : 14
LEFT_BRACE           : 26
LEFT_BRACKET         : 56 57 59
LEFT_PAR             : 22 23 24 25 28 29 30 61 62
MINUS_MINUS          : 43 44
NEW                  : 55
NULL                 : 68
NUMBER               : 
PLUS_PLUS            : 41 42
PRIVATE              : 10 11
PUBLIC               : 8 9
RETURN               : 31
RIGHT_BRACE          : 26
RIGHT_BRACKET        : 56 57 59
RIGHT_PAR            : 22 23 24 25 28 29 30 61 62
SEMICOLON            : 13 30 30 31 32 33 34 37
STATIC               : 9 11 12
STRING_CONST         : 67
SUPER                : 73
THIS                 : 72
TRUE                 : 69
UNARY_OP             : 54
VOID                 : 24 25
WHILE                : 29
error                : 

Nonterminals, with rules where they appear

array_d              : 55
array_d2             : 56 57
array_e              : 55 56 59
assign               : 38 50
block                : 22 23 24 25 35
constructor_decl     : 2
else_stmt            : 28
expr                 : 28 29 30 31 40 52 52 53 53 54 56 57
field_access         : 5 74
field_decl           : 1
formal_param         : 63 65
formal_param2        : 63 65
formals              : 23 25 62
lhs                  : 40 41 42 43 44
literal              : 4 71
method_decl          : 3
method_invocation    : 39
modifier             : 6 22 23 24 25 61 62
new_array            : 51
primary              : 49 75
start                : 0
stmt                 : 27 28 29 30 46
stmt2                : 27
stmt_expr            : 30 30 32
stmts                : 26 47
type                 : 13 22 23 55 66
var_decl             : 6 36
variable             : 18 20 66
variable2            : 18 20
variables            : 13

